[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "social-scrubber"
version = "0.1.0"
description = "A Python tool to help you bulk-delete your posts from Twitter, Mastodon, and Bluesky"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Hossain Khan", email = "hello@hossain.dev"},
]
keywords = ["social-media", "cleanup", "bulk-delete", "bluesky", "mastodon", "twitter"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: System :: Archiving",
    "Topic :: Utilities",
]
requires-python = ">=3.9"
dependencies = [
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "colorama>=0.4.6",
    "rich>=13.0.0",
    "tweepy>=4.14.0",
    "Mastodon.py>=1.8.1",
    "atproto>=0.0.44",
    "python-dateutil>=2.8.2",
    "requests>=2.31.0",
    "pydantic>=2.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
    "pre-commit>=3.3.0",
    "twine>=4.0.0",
]

[project.scripts]
social-scrubber = "social_scrubber.cli:main"

[project.urls]
"Homepage" = "https://github.com/hossain-khan/social-scrubber"
"Bug Reports" = "https://github.com/hossain-khan/social-scrubber/issues"
"Source" = "https://github.com/hossain-khan/social-scrubber"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["social_scrubber"]
skip_glob = ["*/__pycache__/*", "*/.*"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "atproto.*",
    "mastodon.*",
    "tweepy.*",
    "rich.*",
    "click.*",
    "colorama.*",
    "dotenv.*",
    "pydantic.*",
    "dateutil.*",
]
ignore_missing_imports = true

# pytest configuration  
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=social_scrubber",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["social_scrubber"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
